<div className="bg-white  p-4 pt-10 -mt-16 rounded-xl  w-80 flex flex-col items-center justify-center drop-shadow-xl z-50 ">
				{/* Logo */}
			
				<div className=" m-2 mb-6">
					<OryzappLogo className="h-10" />
				</div>
				{/* Error Message */}
				{isError === true ? <div className="text-sprTertiary/80 text-sm text-center">{errorMessage}</div>:<></>}
				{/* Signup */}
				<div className={loginWithUsername === 'signup' ? "w-52 h-auto rounded-lg" : " hidden"}>
					<form onSubmit={handleSignUp}>
						<div className="flex flex-col pb-3">
							<label className="ary text-sprPrimary" htmlFor="">First Name</label>
							<input onChange={handleChange} type="text" name="fname" value={state.fname} className="rounded-full h-8 p-2  text-gray-700 ring-2 ring-sprPrimary/60 focus:outline-none focus:bg-sprPrimary/10" required />
						</div>
						<div className="flex flex-col pb-3">
							<label className="ary text-sprPrimary" htmlFor="">Last Name</label>
							<input onChange={handleChange} type="text" name="lname" value={state.lname} className="rounded-full h-8 p-2  text-gray-700 ring-2 ring-sprPrimary/60 focus:outline-none focus:bg-sprPrimary/10" required />
						</div>
						<div className="flex flex-col pb-3">
							<label className="ary text-sprPrimary" htmlFor="">Email</label>
							<input onChange={handleChange} type="email" name="email" value={state.email} className="rounded-full h-8 p-2  text-gray-700 ring-2 ring-sprPrimary/60 focus:outline-none focus:bg-sprPrimary/10" required />
						</div>
						<div className="flex flex-col pb-3">
							<label htmlFor="" className=" text-sprPrimary">Password</label>
							<input onChange={handleChange} type="password" name="password" value={state.password} className="rounded-full h-8 p-3 text-gray-700 ring-2 ring-sprPrimary/60 focus:outline-none focus:bg-sprPrimary/10" required />
						</div>
						<button className="bg-sprPrimary/80  hover:bg-sprPrimary/50 active:bg-sprPrimary  w-full rounded-full py-2 text-white font-medium" type='submit'>Sign Up</button>
					</form>

				</div>
				{/* Login */}
				<div className={loginWithUsername === true ? "w-52 h-52 rounded-lg " : " hidden"}>
					<form onSubmit={handleLogIn}>
						<div className="flex flex-col pb-3">
							<label className="text-yellow-500" htmlFor="">Email</label>
							<input onChange={handleChange} type="email" name="email" value={state.email} className="rounded-full h-8 p-2  text-gray-700 ring-2 ring-yellow-300 focus:outline-none focus:bg-yellow-100/50" required  />
						</div>

						<div className="flex flex-col pb-3">
							<label htmlFor="" className="text-yellow-500">Password</label>

							<input onChange={handleChange} type="password" name="password" value={state.password} className="rounded-full h-8 p-3 text-gray-700 ring-2 ring-yellow-300 focus:outline-none focus:bg-yellow-100/50" required />
						</div>
						<button className="bg-yellow-500 hover:bg-yellow-300 active:bg-yellow-600 w-full rounded-full py-2 text-white font-medium" type='submit'>Login</button>
					</form>
				</div>
				{/* QR Scan */}
				<div className={loginWithUsername === false ? "bg-slate-200 w-52 h-52 rounded-lg mb-3" : "hidden"}>
					<video id="qr-scan" ref={scanRef} className="h-full w-full "></video>
				</div>
					<button onClick={()=>{
						startScanning()
						}}
						className={loginWithUsername === false ?"bg-yellow-400 rounded-full p-2 text-white font-medium hover:bg-yellow-200 active:bg-yellow-500":"hidden"}
						>
							Scan Code</button>

				<div className="mb-4 text-slate-500">OR</div>

				<div className={loginWithUsername === true ? "hidden" : "cursor-pointer"} onClick={() => {
					setLoginWithusername(true)
					setState(initialState)
				setIsError(false)
				}}><u className="text-yellow-500 font-light underline">Log In with Email</u></div>

				<div className={loginWithUsername === false ? "hidden" : "cursor-pointer"} onClick={() => {
					setState(initialState)
					setLoginWithusername(false)
				setIsError(false)

				}}><u className="text-yellow-500 font-light" >Log In with Scanner</u></div>
				<div className={loginWithUsername === 'signup' ? "hidden" : "pt-2 cursor-pointer flex text-sm"} onClick={() => {
					setState(initialState)
					setLoginWithusername('signup')
					setIsError(false)
					
				}}><p className="font-light text-sprGray">Don't have an account?</p> <p className="text-yellow-500 font-light underline">Sign Up</p></div>
				<div className="flex px-10 w-full justify-between mt-4">
				<img src={clsuLogo} alt="" className="w-12 h-12 rounded-full" />
				<img src={clsuRETLogo} alt="" className="w-12 h-12 rounded-full" />
				</div>

			</div>




   <div className='flex space-x-10'>
                        <aside>
                            <ul className='text-sm'>
                                <li onClick={()=>{setIndex(1)}} className={index === 1 ? 'font-bold': ''}>Account Settings</li>
                                {/* <li onClick={()=>{setIndex(2)}} className={index === 2 ? 'font-bold': ''}>Display</li> */}
                            </ul>
                        </aside>
                        <main className=' w-auto'>
                           <div className={index !== 1? 'hidden':'block'}>
                           <h1 className='font-semibold'>Edit Profile</h1>
                            <section className='flex-col sm:flex-row flex sm:space-x-4 '>
                                
                            <div className='flex flex-col flex-auto'><label> First Name</label> <input type="text"  className=' ring-2 ring-sprPrimary/60 focus:outline-none pl-2 py-1 rounded-full' name='fname' value={info.fname} onChange={handleChange}/></div>
                            <div className='flex flex-col flex-auto'><label> Last Name</label> <input type="text"  className='ring-2 ring-sprPrimary/60 focus:outline-none pl-2 py-1 rounded-full' name='lname' value={info.lname } onChange={handleChange}/></div>

                            
                            </section>
                            <div className='flex flex-col'><label> Role</label> <input type="text"   className='ring-2 ring-sprPrimary/60 focus:outline-none pl-2 py-1 rounded-full' name='role' value={info.role}  onChange={handleChange}/></div>
                            <div className='flex flex-col'><label>Email</label> <input type="text"  className='ring-2 ring-sprPrimary/60 focus:outline-none pl-2 py-1 rounded-full' name='email' value={info.email} readOnly/></div>
                            <div className='flex flex-col'><label> Password</label><input type="password"  className='ring-2 ring-sprPrimary/60 focus:outline-none pl-2 py-1 rounded-full' name='password'  value={info.password} onChange={handleChange}/></div>
                           </div>

                           <button className='bg-sprPrimary hover:bg-sprPrimaryOffLight font-medium py-1 px-2 mt-2 rounded-full text-white'> Save</button>
                        </main>


                </div>


  <form onSubmit={submitEdit}>

            <div className='text-xl font-medium mb-2'>Edit Profile</div>

            <div className='flex flex-col space-y-3 bg-blue-50 overflow-scroll'>
              <div className='flex flex-col space-y-3 pl-3'>
                {/* Basic Info */}
                <h4 className='text-sm font-medium'>Basic Info</h4>
                <div className='flex md:space-x-3  flex-col md:flex-row'>
                  {/* First Name */}
                  <div className="flex flex-col">
                    <label className="text-sm text-slate-500" htmlFor="fname">
                      First Name
                    </label>
                    <input type="text" placeholder="e.g. Juan" className="border border-slate-500 text-sm w-64  rounded-full font-light sm:p-1 lg:p-3  focus:outline-2 focus:outline-sprPrimary" name='fname' value={info.fname} onChange={handleChange} />
                  </div>
                  {/* Last Name */}
                  <div className="flex flex-col">
                    <label className="text-sm text-slate-500" htmlFor="lname">
                      Last Name
                    </label>
                    <input type="text" placeholder="e.g. Dela Cruz" className="border border-slate-500 text-sm w-64  rounded-full font-light sm:p-1 lg:p-3  focus:outline-2 focus:outline-sprPrimary" name='lname' value={info.lname} onChange={handleChange} />
                  </div>
                </div>
                {/* Role */}
                <div className="flex flex-col">
                  <label className="text-sm text-slate-500" htmlFor="fname">
                    Role
                  </label>
                  <input disabled type="text" placeholder="Role" className="bg-slate-100 text-sm w-64  rounded-full font-light  sm:p-1 lg:p-3  focus:outline-2 focus:outline-sprPrimary" name='role' value={info.role} />
                </div>

              </div>

              <div className='flex flex-col space-y-3 pl-3'>
                <h4 className='text-sm font-medium'>Email and Password</h4>
                {/* Email */}
                <div className="flex flex-col">
                  <label className="text-sm text-slate-500" htmlFor="fname">
                    Email
                  </label>
                  <input disabled type="text" placeholder="email" className="bg-slate-100 text-sm w-64  rounded-full font-light sm:p-1 lg:p-3  focus:outline-2 focus:outline-sprPrimary" name='email' value={info.email} />
                </div>
                {/* Password */}
                <div className="flex flex-col">
                  <label className="text-sm text-slate-500" htmlFor="fname">
                    Password
                  </label>
                  <input type="password" className="border border-slate-500 text-sm w-64  rounded-full font-light sm:p-1 lg:p-3  focus:outline-2 focus:outline-sprPrimary" name='password' value={info.password} onChange={handleChange} />
                </div>

              </div>
            </div>

            <div className='flex  justify-end space-x-3 bg-yellow-50'>
              <button className="border-2 border-slate-400 text-sm w-24 font-bold text-slate-400 hover:border-slate-300/0 hover:bg-slate-300  hover:text-slate-100 active:bg-slate-500 active:text-slate-100 rounded-full py-2" onClick={() => {
                closeModal()
                setInfo(initialInfo)
              }}>Cancel</button>
              <button type="submit" className="bg-sprPrimary text-sm font-bold w-24  hover:bg-slate-300  hover:text-slate-100 active:bg-slate-500 active:text-slate-100 text-white rounded-full">Save</button>

            </div>

          </form>




 <div className=' flex sticky top-0'>
                            <div className='h-fit bg-blue-400 px-3   '>#</div>
                            <div className='flex-auto h-fit bg-blue-400 px-3 '>Accession</div>
                            <div className='flex-auto h-fit bg-blue-400 px-3'>Classification</div>
                            <div className='flex-auto h-fit bg-blue-400 px-3'>Variety</div>
                            <div className='flex-auto h-fit bg-blue-400 px-3'>Source</div>
                            <div className='flex-auto h-fit bg-blue-400 px-3'>Anotha</div>
                        </div>
{
  searched.map((rice) => (
    // <div className="px-6 py-2 font-medium text-sprPrimary300 "> {list = list + 1} </div>
    <div className='flex group'>
      <div className='group-hover:bg-red-500 group-active:bg-red-900 w-10 h-fit bg-blue-300 p-3'>{list = list + 1} </div>
      <div className=' group-hover:bg-red-500 group-active:bg-red-900 flex-auto h-fit bg-blue-200 p-3'>Accession</div>
      <div className='group-hover:bg-red-500 group-active:bg-red-900 flex-auto h-fit bg-blue-300 p-3'>Classification</div>
      <div className='group-hover:bg-red-500 group-active:bg-red-900 flex-auto h-fit bg-blue-200 p-3'>Variety</div>
      <div className='group-hover:bg-red-500 group-active:bg-red-900 flex-auto h-fit bg-blue-300 p-3'>Source</div>
      <div className='group-hover:bg-red-500 group-active:bg-red-900 flex-auto h-fit bg-blue-300 p-3'>Source</div>

    </div>
  ))
}
//////////////////////////////////////

<div className="flex w-full max-h-0 sm:max-h-0 sm:max-w-0 lg:max-w-full  relative bg-yellow-400">
  <div className="hidden sm:flex flex-col  divide-y divide-slate-200 relative h-full ">
    <div className="  text-sprPrimary bg-white sticky top-0 px-6 py-2 text-sm font-medium">
      #
    </div>
    {
      searchInput === '' ? <>
        {riceAccessions.map((rice) => (
          <div className="px-6 py-2 font-medium text-sprPrimaryLight"> {list = list + 1} </div>
        ))}
      </> :
        <>
          {searched.map((rice) => (
            <div className="px-6 py-2 font-medium text-sprPrimaryLight"> {list = list + 1} </div>
          ))}
        </>
    }
  </div>
  <div className="hidden sm:flex flex-col flex-auto  divide-y divide-slate-200 relative h-full">
    <div className="text-sprPrimary bg-white sticky top-0 px-8 py-2 text-sm font-medium">
      Accessions
    </div>
    {
      searchInput === '' ? <>
        {riceAccessions.map((rice) => (
          <div className="px-8 py-2 text-md font-medium text-sprGray60 whitespace-nowrap bg-slate-50"> CL-R{rice.accessionId === "" ? "---" : rice.accessionId} </div>
        ))}</> : <>
        {searched.map((rice) => (
          <div className="px-8 py-2 text-md font-medium text-sprGray60 whitespace-nowrap bg-slate-50"> CL-R{rice.accessionId === "" ? "---" : rice.accessionId} </div>
        ))}</>
    }

  </div>
  <div className="hidden sm:flex flex-col flex-auto divide-y divide-slate-200   relative h-full">
    <div className=" text-sprPrimary px-8 py-2 bg-white sticky top-0 text-sm font-medium">
      Classification
    </div>
    {
      searchInput === '' ?
        <>{riceAccessions.map((rice) => (
          <div className="px-8 py-2 text-md font-medium text-sprGray60 whitespace-nowrap bg-slate-100"> {rice.classification === "" ? "---" : rice.classification}</div>
        ))}</> :
        <>{searched.map((rice) => (
          <div className="px-8 py-2 text-md font-medium text-sprGray60 whitespace-nowrap bg-slate-100"> {rice.classification === "" ? "---" : rice.classification}</div>
        ))}</>

    }
  </div>
  <div className="hidden sm:flex flex-col flex-auto divide-y divide-slate-200 relative h-full">
    <div className="text-sprPrimary bg-white px-8 py-2 sticky top-0 text-sm font-medium">
      Variety
    </div>
    {searchInput === '' ? <>
      {riceAccessions.map((rice) => (
        <div className="px-8 py-2 text-md font-medium text-sprGray60 whitespace-nowrap bg-slate-50"> {rice.variety === "" ? "---" : rice.variety}</div>
      ))}</> : <>
      {searched.map((rice) => (
        <div className="px-8 py-2 text-md font-medium text-sprGray60 whitespace-nowrap bg-slate-50"> {rice.variety === "" ? "---" : rice.variety}</div>
      ))}</>}

  </div>
  <div className="hidden sm:flex flex-col flex-auto divide-y divide-slate-200 relative h-full ">
    <div className="text-sprPrimary bg-white  px-8 py-2 sticky top-0 text-sm font-medium">
      Source
    </div>
    {searchInput === '' ? <>
      {riceAccessions.map((rice) => (
        <div className="px-8 py-2 text-md font-medium text-sprGray60 whitespace-nowrap bg-slate-100" > {rice.source === "" ? "---" : rice.source}</div>
      ))}</> : <>
      {searched.map((rice) => (
        <div className="px-8 py-2 text-md font-medium text-sprGray60 whitespace-nowrap bg-slate-100" > {rice.source === "" ? "---" : rice.source}</div>
      ))}</>}
  </div>
  <div className="hidden sm:flex flex-col  divide-y sm:divide-y bg-white divide-white h-full sticky right-0">
    <div className=" text-sprPrimary flex justify-center bg-white  px-10 py-2 sticky top-0 text-sm font-medium">
      <h1 className="group" onClick={() => { exportExcel() }}>
        <ExcelIcon className='stroke-sprPrimary h-5 hover:stroke-sprPrimarySuperLight active:stroke-sprPrimary' />
        <small className=' hidden group-hover:block absolute whitespace-nowrap right-2 bg-sprGray60 rounded-sm p-1 text-white' >Export as Excel</small>
      </h1>
    </div>
    {searchInput === '' ? <>
      {riceAccessions.map((rice) => (
        <div className="p-6 py-2 text-md font-medium text-sprGray60 whitespace-nowrap" >
          <div className="flex gap-2">
            <button
              // className=" text-white text-sm bg-gradient-to-b from-sprPrimary to-sprPrimaryDarkest hover:bg-gradient-to-t hover:from-sprPrimaryLight hover:to-sprPrimaryLight drop-shadow-md h-8 w-14 sm:h-6 sm:w-12 rounded-full  shadow-slate-300 "
              className=" text-white text-sm bg-gradient-to-b from-sprPrimary to-sprPrimaryDarkest rounded-full  hover:bg-gradient-to-t hover:from-sprPrimaryLight hover:to-sprPrimaryLight h-8 w-14 sm:h-6 sm:w-12 shadow-slate-300 "
              onClick={() => {
                setIsRiceInfoModalOpen(true)
                setModalId(rice.accessionId)

              }}
            >
              view
            </button>
            <button
              className=" lg:block p-1 bg-gradient-to-b from-sprPrimary to-sprPrimaryDarkest hover:bg-gradient-to-t hover:from-sprPrimaryLight hover:to-sprPrimaryLight   rounded-full   shadow-slate-300 "
              onClick={() => {
                editRiceAccessionID(rice.id, rice.imageUrl);
              }}
            >
              {/* <div className="w-4 h-4"><img src={editIcon} alt="" /></div> */}
              <EditIcon className="w-4 h-4 fill-white" />
            </button>
            <button
              className=" lg:block p-1 bg-gradient-to-b from-sprPrimary to-sprPrimaryDarkest rounded-full  hover:bg-gradient-to-t hover:from-sprPrimaryLight hover:to-sprPrimaryLight shadow-slate-300 "
              onClick={() => {
                // deleteRiceAccession(rice.id);
                setDelId(rice.id)
                setModalId(rice.accessionId)
                setDelUrl(rice.imageUrl);

                setIsDelModalOpen(true)


              }}
            >
              <div className="w-4 h-4"><img src={delIcon} alt="" /></div>

            </button>
          </div>
        </div>
      ))}
    </> : <>{searched.map((rice) => (
      <div className="p-6 py-2 text-md font-medium text-sprGray60 whitespace-nowrap" >
        <div className="flex gap-2">
          <button
            // className=" text-white text-sm bg-gradient-to-b from-sprPrimary to-sprPrimaryDarkest hover:bg-gradient-to-t hover:from-sprPrimaryLight hover:to-sprPrimaryLight drop-shadow-md h-8 w-14 sm:h-6 sm:w-12 rounded-full  shadow-slate-300 "
            className=" text-white text-sm bg-gradient-to-b from-sprPrimary to-sprPrimaryDarkest rounded-full  hover:bg-gradient-to-t hover:from-sprPrimaryLight hover:to-sprPrimaryLight h-8 w-14 sm:h-6 sm:w-12 shadow-slate-300 "
            onClick={() => {
              setIsRiceInfoModalOpen(true)
              setModalId(rice.accessionId)

            }}
          >
            view
          </button>
          <button
            className=" lg:block p-1 bg-gradient-to-b from-sprPrimary to-sprPrimaryDarkest hover:bg-gradient-to-t hover:from-sprPrimaryLight hover:to-sprPrimaryLight   rounded-full   shadow-slate-300 "
            onClick={() => {
              editRiceAccessionID(rice.id);
            }}
          >
            <div className="w-4 h-4"><img src={editIcon} alt="" /></div>
          </button>
          <button
            className=" lg:block p-1 bg-gradient-to-b from-sprPrimary to-sprPrimaryDarkest rounded-full  hover:bg-gradient-to-t hover:from-sprPrimaryLight hover:to-sprPrimaryLight shadow-slate-300 "
            onClick={() => {
              // deleteRiceAccession(rice.id);
              setDelId(rice.id)
              setModalId(rice.accessionId)
              setDelUrl(rice.imageUrl);
              setIsDelModalOpen(true)

            }}
          >
            <div className="w-4 h-4"><img src={delIcon} alt="" /></div>

          </button>
        </div>
      </div>
    ))}</>}
  </div>

  {/* Mobile */}
  <div className="w-full flex  sm:hidden flex-col mx-2 gap-2 py-2 ">
    {searchInput === '' ?
      <>
        {riceAccessions.map((rice) => (
          <div className="flex justify-between items-center  bg-slate-50">
            <div className="flex flex-col -space-y-3">
              <div className="px-6 py-4 text-3xl font-bold text-sprGray80"> CL-R{rice.accessionId} </div>
              <div className="px-6 py-2 text-md font-normal text-sprPrimaryLight"> {rice.classification === '' ? "---" : rice.classification} </div>
              <div className="px-6 py-2 text-md font-normal text-sprPrimaryLight"> {rice.variety === '' ? "---" : rice.variety} </div>
            </div>
            <button className="mr-8 bg-sprPrimary hover:bg-sprPrimaryLight active:bg-sprPrimary rounded-full p-1 px-2 text-white font-medium text-xl" onClick={() => {
              setIsRiceInfoModalOpen(true)
              setModalId(rice.accessionId)

            }}>view</button>
          </div>
        ))}
      </> :
      <>
        {searched.map((rice) => (
          <div className="flex justify-between items-center  bg-slate-50">
            <div className="flex flex-col -space-y-3">
              <div className="px-6 py-4 text-3xl font-bold text-sprGray80"> CL-R{rice.accessionId} </div>
              <div className="px-6 py-2 text-md font-normal text-sprPrimaryLight"> {rice.classification === '' ? "---" : rice.classification} </div>
              <div className="px-6 py-2 text-md font-normal text-sprPrimaryLight"> {rice.variety === '' ? "---" : rice.variety} </div>
            </div>
            <button className="mr-8 bg-sprPrimary hover:bg-sprPrimaryLight active:bg-sprPrimary rounded-full p-1 px-2 text-white font-medium text-xl" onClick={() => {
              setIsRiceInfoModalOpen(true)
              setModalId(rice.accessionId)

            }}>view</button>
          </div>
        ))}</>}


  </div>

</div>